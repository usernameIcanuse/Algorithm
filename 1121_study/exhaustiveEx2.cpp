/*테르로미노*/
#include<iostream>
#include<algorithm>
using namespace std;

int Types[19][4][2]{
	{{0,0},{0,1},{0,2},{0,3} },
	{{0,0},{1,0},{2,0},{3,0} },
	{{0,0},{1,0},{0,1},{1,1} },
	{{0,0},{1,0},{2,0},{2,1} },
	{{0,0},{0,1},{0,2},{1,2} },
	{{0,0},{1,0},{1,-1},{1,-2}},
	{{0,0},{1,0},{1,1},{1,2} },
	{{0,0},{1,0},{2,0},{2,-1} },
	{{0,0},{0,1},{0,2},{1,0}},
	{{0,0},{0,1},{1,0},{2,0}},
{{0,0},{0,1},{1,1},{2,1}},
{{0,0},{0,1},{0,2},{1,1}},
{{0,0},{1,0},{1,-1},{2,0}},
{{0,0},{1,0},{1,1},{2,0}},
{{0,0},{1,0},{1,1},{1,-1}},
{{0,0},{1,0},{1,-1},{2,-1}},
{{0,0},{1,0},{1,1},{2,1}},
{{0,0},{0,1},{1,0},{1,-1}},
{{0,0},{0,1},{1,1},{1,2}}
};

int arr[500][500];
int n, m;
int ans;

int Sum(int y, int x) {
	int sum = 0;
	for (int i = 0; i < 19; i++) {
		int tmp = 0;
		for (int j = 0; j < 4; j++) {
			int ny = y + Types[i][j][0];
			int nx = x + Types[i][j][1];
			if (ny < 0 || nx < 0 || ny >= n || nx >= m) break;

			tmp += arr[ny][nx];
		}
		sum = max(sum, tmp);
	}

	return sum;
}

void solution() {
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			ans = max(Sum(i, j), ans);
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> arr[i][j];

	solution();

	cout << ans << "\n";
	return 0;
}